/*
 * Copyright 2013 SEARCH Group, Incorporated. 
 * 
 * See the NOTICE file distributed with  this work for additional information 
 * regarding copyright ownership.  SEARCH Group Inc. licenses this file to You
 * under the Apache License, Version 2.0 (the "License"); you may not use this 
 * file except in compliance with the License.  You may obtain a copy of the 
 * License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package gov.nij.bundles.intermediaries.ers;

import org.custommonkey.xmlunit.Difference;
import org.custommonkey.xmlunit.DifferenceConstants;
import org.custommonkey.xmlunit.DifferenceListener;
import org.w3c.dom.Node;

/**
 * This class will assist in ignoring IDs when comparing XML documents.  The ID's are generated by the generate ID function
 * so they will be random.  For more information, see here:
 * 
 * http://stackoverflow.com/questions/5249031/xmlunit-ignoring-id-attribute-in-comparison/
 * 
 */
public class IgnoreIDsDifferenceListener implements DifferenceListener {
	private static final int[] IGNORE_VALUES = new int[] { DifferenceConstants.ATTR_VALUE
			.getId(), };

	private boolean isIgnoredDifference(Difference difference) {
		int differenceId = difference.getId();
		for (int i = 0; i < IGNORE_VALUES.length; ++i) {
			if (differenceId == IGNORE_VALUES[i]) {
				return true;
			}
		}
		return false;
	}

	public int differenceFound(Difference difference) {
		if (isIgnoredDifference(difference)) {
			return RETURN_IGNORE_DIFFERENCE_NODES_IDENTICAL;
		} else {
			return RETURN_ACCEPT_DIFFERENCE;
		}
	}

	public void skippedComparison(Node control, Node test) {
	}
}